(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{441:function(e,a,s){"use strict";s.r(a);var t=s(22),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"在-bungeecord-中创建基本的指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-bungeecord-中创建基本的指令"}},[e._v("#")]),e._v(" 在 BungeeCord 中创建基本的指令")]),e._v(" "),s("p",[e._v('BungeeCord 提供一个命令接口，类似于 Bukkit。本篇教程中，我们将创建一个简单的 "Hello World" 指令。')]),e._v(" "),s("h2",{attrs:{id:"创建指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建指令"}},[e._v("#")]),e._v(" 创建指令")]),e._v(" "),s("p",[e._v("创建一个名为 HelloWorldCommand 的类。这个类应该继承 Command。你的IDE应该会自动补全代码，现在我们需要实现构造方法和 execute() 方法。我们首先实现构造方法，然后再实现 execute() 方法。")]),e._v(" "),s("h2",{attrs:{id:"构造方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造方法"}},[e._v("#")]),e._v(" 构造方法")]),e._v(" "),s("p",[e._v("Command 类有两个构造方法：一个简单的只有指令名的构造方法，和一个额外添加了权限和别名的构造方法。我们现在使用第一个。添加以下代码到你的类中：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('  public HelloWorldCommand() {\n      super("helloworld");\n  }\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("这将创建一个指令，使用 /helloworld 来执行指令。")]),e._v(" "),s("h2",{attrs:{id:"执行方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行方法"}},[e._v("#")]),e._v(" 执行方法")]),e._v(" "),s("p",[e._v("现在我们可以为指令添加实际的功能了。添加以下代码到你的类中：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('  @Override\n  public void execute(CommandSender commandSender, String[] strings) {\n      commandSender.sendMessage(new ComponentBuilder("Hello world!").color(ChatColor.GREEN).create());\n  }\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v('当玩家执行 /helloworld 指令时，消息 "Hello world!" (绿色)将会被发送给玩家。')]),e._v(" "),s("h2",{attrs:{id:"注册指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注册指令"}},[e._v("#")]),e._v(" 注册指令")]),e._v(" "),s("p",[e._v("添加以下代码到 onEnable() 方法：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("getProxy().getPluginManager().registerCommand(this, new HelloWorldCommand());\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("现在你已经创建了你自己的指令。与 Bukkit 不同的是，BungeeCord 不要求将指令添加至 plugin.yml。")])])}),[],!1,null,null,null);a.default=r.exports}}]);